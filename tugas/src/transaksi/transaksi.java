/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package transaksi;

import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class transaksi extends javax.swing.JFrame {

    /**
     * Creates new form transaksi
     */
    public transaksi() {
        initComponents();
        setLocationRelativeTo(this);
        bukaTransaksi();
        prosesPelangganData();
        prosesMobilData();
    }

    private void prosesPelangganData() {
        dataIdPelanggan.removeAllItems();

        try {
            java.sql.Connection conn = Koneksi.koneksi.ConnectionDB();
            java.sql.Statement stmt = conn.createStatement();
            java.sql.ResultSet rs = stmt.executeQuery("SELECT id_pelanggan, nama_pelanggan FROM pelanggan");
            while (rs.next()) {
                String item = String.valueOf(rs.getInt("id_pelanggan") + " - " + rs.getString("nama_pelanggan"));
                dataIdPelanggan.addItem(item);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading supplier data: " + e.getMessage());
        }
    }

    private void setPilihanPelanggan(int idSupplier) {
        for (int i = 0; i < dataIdPelanggan.getItemCount(); i++) {
            String item = dataIdPelanggan.getItemAt(i);
            if (Integer.parseInt(item.split(" - ")[0]) == idSupplier) {
                dataIdPelanggan.setSelectedIndex(i);
                break;
            }
        }
    }

    private void prosesMobilData() {
        dataIdMobil.removeAllItems();

        try {
            java.sql.Connection conn = Koneksi.koneksi.ConnectionDB();
            java.sql.Statement stmt = conn.createStatement();
            java.sql.ResultSet rs = stmt.executeQuery("SELECT id_mobil, merek_mobil, harga_sewa_mobil FROM mobil");
            while (rs.next()) {
                String item = String.valueOf(rs.getInt("id_mobil") + " - " + rs.getString("merek_mobil") + " - " + rs.getString("harga_sewa_mobil"));
                dataIdMobil.addItem(item);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading supplier data: " + e.getMessage());
        }
    }

    private void setPilihanMobil(int idSupplier) {
        for (int i = 0; i < dataIdMobil.getItemCount(); i++) {
            String item = dataIdMobil.getItemAt(i);
            if (Integer.parseInt(item.split(" - ")[0]) == idSupplier) {
                dataIdMobil.setSelectedIndex(i);
                break;
            }
        }
    }

    private double TotalHarga(int idMobil) throws SQLException {
        String sql = "SELECT harga_sewa_mobil FROM mobil WHERE id_mobil = ?";
        java.sql.Connection conn = Koneksi.koneksi.ConnectionDB();
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        pst.setInt(1, idMobil);
        java.sql.ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            return rs.getDouble("harga_sewa_mobil");
        }
        throw new SQLException("Harga sewa per hari tidak ditemukan untuk ID Mobil: " + idMobil);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dataTotalHarga = new javax.swing.JTextField();
        dataIdPelanggan = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel_Transaksi = new javax.swing.JTable();
        Submit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        dataLamaSewa = new javax.swing.JTextField();
        dataId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dataIdMobil = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tabel Data Transaksi");

        jLabel2.setText("Id Mobil");

        jLabel4.setText("Lama Sewa");

        jLabel5.setText("Harga Sewa Mobil");

        dataIdPelanggan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tersedia", "disewa" }));
        dataIdPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataIdPelangganActionPerformed(evt);
            }
        });

        Tabel_Transaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Id pelanggan", "Id Mobil", "Lama Sewa", "Total Harga"
            }
        ));
        Tabel_Transaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabel_TransaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabel_Transaksi);

        Submit.setText("Kirim");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        Delete.setText("Hapus");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Edit.setText("Ubah");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        dataLamaSewa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataLamaSewaActionPerformed(evt);
            }
        });

        dataId.setEnabled(false);

        jLabel7.setText("Id Transaksi");

        jLabel8.setText("Id Pelanggan");

        dataIdMobil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tersedia", "disewa" }));

        jLabel6.setText("/Hari");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(Submit))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dataIdPelanggan, javax.swing.GroupLayout.Alignment.LEADING, 0, 208, Short.MAX_VALUE)
                                    .addComponent(dataId, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dataTotalHarga)
                                    .addComponent(dataIdMobil, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(dataLamaSewa, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(134, 134, 134)
                            .addComponent(Edit)
                            .addGap(28, 28, 28)
                            .addComponent(Delete))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dataId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataIdPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataIdMobil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dataLamaSewa)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataTotalHarga))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Submit)
                            .addComponent(Delete)
                            .addComponent(Edit))
                        .addGap(82, 82, 82))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Tabel_TransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabel_TransaksiMouseClicked
        // TODO add your handling code here:
        int row = Tabel_Transaksi.getSelectedRow();
        dataId.setText(Tabel_Transaksi.getModel().getValueAt(row, 0).toString());
        dataIdPelanggan.setSelectedItem(Tabel_Transaksi.getModel().getValueAt(row, 1).toString());
        dataIdMobil.setSelectedItem(Tabel_Transaksi.getModel().getValueAt(row, 2).toString());
        dataLamaSewa.setText(Tabel_Transaksi.getModel().getValueAt(row, 3).toString());
        dataTotalHarga.setText(Tabel_Transaksi.getModel().getValueAt(row, 4).toString());
    }//GEN-LAST:event_Tabel_TransaksiMouseClicked

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "INSERT INTO transaksi ("
                    + "pelanggan_id, "
                    + "mobil_id, "
                    + "lama_sewa, "
                    + "total_harga_sewa) "
                    + "VALUES (?, ?, ?, ?)";

            java.sql.Connection conn = Koneksi.koneksi.ConnectionDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql, java.sql.Statement.RETURN_GENERATED_KEYS);

            // Mendapatkan ID Pelanggan dari JComboBox
            String selectedPelanggan = (String) dataIdPelanggan.getSelectedItem();
            int idPelanggan = Integer.parseInt(selectedPelanggan.split(" - ")[0]);
            pst.setInt(1, idPelanggan);

            String selectedMobil = (String) dataIdMobil.getSelectedItem();
            int idMobil = Integer.parseInt(selectedMobil.split(" - ")[0]);
            double hargaMobil = Double.parseDouble(selectedMobil.split(" - ")[2]);
            pst.setInt(2, idMobil);

            int lamaSewa = Integer.parseInt(dataLamaSewa.getText());
            pst.setInt(3, lamaSewa);

            double totalHarga = lamaSewa * hargaMobil;
            pst.setDouble(4, totalHarga);

            // Menampilkan total harga sewa di field dataTotalHarga
//            dataTotalHarga.setText(String.format("%.2f", totalHarga));

            int affectedRows = pst.executeUpdate();

            if (affectedRows > 0) {
                java.sql.ResultSet rs = pst.getGeneratedKeys();
                if (rs.next()) {
                    var idTransaksi = rs.getInt(1);
                    JOptionPane.showMessageDialog(null, "Data Mobil Berhasil Disimpan dengan ID: " + idTransaksi);
                }
            }

            // Bersihkan inputan setelah penyimpanan berhasil
            dataIdPelanggan.setSelectedItem("");
            dataIdMobil.setSelectedItem("");
            dataLamaSewa.setText("");
            dataTotalHarga.setText("");
            dataIdPelanggan.setSelectedItem("");

            Tabel_Transaksi.requestFocusInWindow();
            bukaTransaksi();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_SubmitActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "DELETE FROM transaksi WHERE id_transaksi=?";

            java.sql.Connection conn = Koneksi.koneksi.ConnectionDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

            pst.setInt(1, Integer.parseInt(dataId.getText())); // ID mobil yang akan dihapus

            int affectedRows = pst.executeUpdate();

            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(null, "Data transaksi Berhasil Dihapus");
            } else {
                JOptionPane.showMessageDialog(null, "Gagal Menghapus Data transaksi");
            }

            // Refresh tabel setelah penghapusan data
            bukaTransaksi();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "UPDATE transaksi SET "
                    + "pelanggan_id=?, "
                    + "mobil_id=?, "
                    + "total_harga_sewa=?, "
                    + "total_harga_sewa=? "
                    + "WHERE id_transaksi=?";

            java.sql.Connection conn = Koneksi.koneksi.ConnectionDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

            // Mendapatkan ID supplier dari JComboBox
            String selectedPelanggan = (String) dataIdPelanggan.getSelectedItem();
            int idPelanggan = Integer.parseInt(selectedPelanggan.split(" - ")[0]);
            pst.setInt(1, idPelanggan);

            String selectedMobil = (String) dataIdMobil.getSelectedItem();
            int idMobil = Integer.parseInt(selectedMobil.split(" - ")[0]);
            pst.setInt(2, idMobil);;

            pst.setInt(3, Integer.parseInt(dataLamaSewa.getText()));
            pst.setDouble(4, Double.parseDouble(dataTotalHarga.getText()));
            pst.setInt(5, Integer.parseInt(dataId.getText())); // ID mobil yang akan diubah

            int affectedRows = pst.executeUpdate();

            // Refresh tabel setelah perubahan data
            bukaTransaksi();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_EditActionPerformed

    private void dataIdPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataIdPelangganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataIdPelangganActionPerformed

    private void dataLamaSewaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataLamaSewaActionPerformed
        // TODO add your handling code here:
        String selectedMobil = (String) dataIdMobil.getSelectedItem();
        double hargaMobil = Double.parseDouble(selectedMobil.split(" - ")[2]);
        int lamaSewa = Integer.parseInt(dataLamaSewa.getText());
        double totalHarga = lamaSewa * hargaMobil;
        
        dataTotalHarga.setText(String.format("%.2f", totalHarga));
    }//GEN-LAST:event_dataLamaSewaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JButton Submit;
    private javax.swing.JTable Tabel_Transaksi;
    private javax.swing.JTextField dataId;
    private javax.swing.JComboBox<String> dataIdMobil;
    private javax.swing.JComboBox<String> dataIdPelanggan;
    private javax.swing.JTextField dataLamaSewa;
    private javax.swing.JTextField dataTotalHarga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void bukaTransaksi() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Id");
        model.addColumn("Id Pelanggan");
        model.addColumn("Id Mobil");
        model.addColumn("Lama Sewa");
        model.addColumn("Total Harga");

        try {
            String sql = "SELECT transaksi.id_transaksi, "
                    + "pelanggan.nama_pelanggan, "
                    + "mobil.merek_mobil, "
                    + "transaksi.lama_sewa, "
                    + "transaksi.total_harga_sewa "
                    + "FROM transaksi "
                    + "JOIN pelanggan ON transaksi.pelanggan_id = pelanggan.id_pelanggan "
                    + "JOIN mobil ON transaksi.mobil_id = mobil.id_mobil";
            java.sql.Connection conn = (Connection) Koneksi.koneksi.ConnectionDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            while (res.next()) {
                model.addRow(new Object[]{
                    res.getString("id_transaksi"),
                    res.getString("nama_pelanggan"),
                    res.getString("merek_mobil"),
                    res.getString("lama_sewa"),
                    res.getString("total_harga_sewa")
                });
            }
            Tabel_Transaksi.setModel(model);
        } catch (Exception e) {
            e.printStackTrace(); // Cetak stack trace untuk debugging
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
}
